# =============================================================================
# GENERIC API TEST FRAMEWORK CONFIGURATION
# =============================================================================
# Copy this file to .env and update the values for your specific API

# API Configuration
API_BASE_URL=http://localhost:3000
API_NAME=Go Fiber E-Commerce API
API_VERSION=1.0.0
API_DESCRIPTION=A high-performance RESTful API built with Go Fiber framework

# Schema Configuration
OPENAPI_SCHEMA_PATH=schemas/api-schema.yaml
DREDD_HOOKS_PATH=tests/dredd-hooks.js

# Server Configuration
SERVER_START_COMMAND=go run main.go
SERVER_WAIT_TIME=3
SERVER_PORT=3000

# Database Configuration
DATABASE_URL=host=localhost user=postgres password=1234 dbname=ecommerce_api port=5432 sslmode=disable

# JWT Secret Key (use a strong, random key in production)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# Server Port (optional, defaults to 3000)
PORT=3000

# Test Database (for running tests)
TEST_DATABASE_URL=host=localhost user=postgres password=1234 dbname=ecommerce_api_test port=5432 sslmode=disable

# Test Configuration
TEST_TIMEOUT=120s
DREDD_LOG_LEVEL=warning
DREDD_REPORTER=cli

# Test User Credentials (for authentication testing)
TEST_USER_EMAIL=test-user@example.com
TEST_USER_PASSWORD=testpassword123
TEST_USER_FIRST_NAME=Test
TEST_USER_LAST_NAME=User

# Test Data Configuration
UNIQUE_EMAIL_SUFFIX=@example.com
TEST_PRODUCT_PRICE=99.99
TEST_ORDER_TOTAL=149.99

# CI/CD Configuration
ENABLE_CI_MODE=false
CI_API_URL=http://localhost:3000

# Framework Behavior
AUTO_SKIP_TESTS=false
ENABLE_DEBUG_LOGGING=true
ENABLE_DYNAMIC_DATA_GENERATION=true
ENABLE_ERROR_SIMULATION=true
